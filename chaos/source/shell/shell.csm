 // Task sample
#code 32
#output shell

  db "CE",26       // sign       [3]
  db "STARTUP",[2] // task name  [9]
  dw 1             // stack size [w]
  dw 2             // task size  [w]

#org 0
  #include source\shell\funcs.csm

  #shortdef curr_dir 4096
  #shortdef fileinforec 8192
  #shortdef mask 12228
  #shortdef data 16384

  #shortdef _fir_attr 0   // b
  #shortdef _fir_size 4   // 2*d
  #shortdef _fir_time 12  // w
  #shortdef _fir_date 14  // w
  #shortdef _fir_name 16  // [262]
  #shortdef _fir_temp 279 // [262]
  #shortdef _fir_flag 540 // w
  #shortdef _fir_strc 542

  // Allocate console
  ah=3;int 0x24;push eax

  // Show copyright
  ah=0xC;esi=str;int 0x23

  // Show info
  //ax=es;ShowNum()
  //ax=ds;ShowNum()

  // allocate memory
  ax=0;ebx=10;int 0x20;ds=ax;es=ax
  mov w:curr_dir,'/'

  // Main circle
  {
    // Show shell prompt
    push ds;push cs;pop ds;ah=0xC;esi=prm;int 0x23;pop ds

    // Read user command
    xor edi,edi;Readln();ax=0x50A;int 0x23

    // exit?
    if (d:[0]=='exit'&&b:[4]==0){ jmp ?v1 }

    _if (d:[0]=='dir'){

       push ds;push cs;pop ds;ah=0xC;esi=dir;int 0x23;pop ds
       esi=curr_dir;ah=0xC;int 0x23
       ax=0x50A;int 0x23

       edi=mask;esi=curr_dir { lodsb;cmp al,0;jz ?v0;stosb;jmps ?^0 } mov eax,'*.*';stosd
       esi=mask;edi=fileinforec;cx=191;ah=9;int 0x25
       while(~nc){
         if(w:[fileinforec._fir_name]!='.'&&w:[fileinforec._fir_name]!='..'){
           ax=0x520;int 0x23;esi=curr_dir;ah=0xC;int 0x23
           mov esi,fileinforec._fir_name;ah=0xC;int 0x23;ax=0x50A;int 0x23
         }
         esi=fileinforec;ah=10;int 0x25
       }
       jmp ?^1
    }

    if(d:[0]=='mem'){
      push ds;push cs;pop ds;ah=0xC;esi=mem;int 0x23;pop ds
      ah=10;int 0x20;eax=edx<<12;ShowNum()
      ax=0x50A;int 0x23
      jmp ?^1
    }

    if(d:[0]=='hlt'){
      d:cs:[0]=0
    }

    if(d:[0]=='type'&&b:[4]==' '){
      ax=0x100;esi=5;int 0x25;
      if (~c){
        push ds;push cs;pop ds;ah=0xC;esi=nfn;int 0x23;pop ds
        ah=0xC;esi=5;int 0x23;ax=0x50A;int 0x23
        jmp ?^2
      } ebx=eax
      _next_block:
      ah=3;edi=data;ecx=4096;int 0x25
      while(~nc){
        ecx=eax;esi=data { lodsb;ah=0x5;int 0x23;loop ?^0 }
        jmp _next_block
      } ah=2;int 0x25
      ax=0x50A;int 0x23
      jmp ?^1
    }

    _if(w:[0]=='cd'&&b:[2]==' '){

      edi=mask;esi=curr_dir { lodsb;cmp al,0;jz ?v0;stosb;jmps ?^0 }
      ifelse(w:[3]=='..'){
        dec edi{ dec edi;cmp b:es:[edi],'/';jnz ?^0 }
        b:es:[~edi]=0
      } else {
        esi=3;if(b:[esi]=='/'){edi=mask} { lodsb;stosb;cmp al,0;jnz ?^0 }
      }
      esi=mask;ah=0xC;int 0x23;ax=0x50A;int 0x23
      if(w:[mask]=='/'){ b:mask=0 }

      clc
      if (b:mask!=0){
         cx=0x90;esi=mask;edi=fileinforec;ah=9;int 0x25
      }
      ifelse(~nc){
        esi=mask;edi=curr_dir { lodsb;cmp al,0;jz ?v0;stosb;jmps ?^0 }
        al='/';stosb;al=0;stosb
      } else {
        ShowNum()
        push eax;push ds;push cs;pop ds;ah=0xC;esi=err;int 0x23;pop ds;pop eax
        esi=3;ah=0xC;int 0x23;ax=0x50A;int 0x23
      }
      jmp ?^1
    }

    // Execute
    xor esi,esi
    if (b:[esi]!='/'){
      edi=mask;esi=curr_dir { lodsb;cmp al,0;jz ?v0;stosb;jmps ?^0 }
      xor esi,esi {lodsb;stosb;cmp al,0;jnz ?^0 } esi=mask
    }
    ah=16;int 0x25
    if (~c){
      push eax;push ds;push cs;pop ds;ah=0xC;esi=err;int 0x23;pop ds
      ah=0xC;xor esi,esi;int 0x23;ax=0x520;int 0x23
      pop eax;ShowNum();ax=0x50A;int 0x23
    }

    jmp ?^0
  }

  // Wait esc
  pop ebx;ah=4;int 0x24

  // Exit
  ah=0x21;int 0x20

str: db "ChaOS SHELL v0.99/alpha.",10,0
prm: db ">",0
err: db "error: ",0
dir: db " directory of ",0
mem: db " memory size = ",0
nfn: db " not found: ",0
