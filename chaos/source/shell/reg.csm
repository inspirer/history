 // Task sample
#code 32
#output reg

  db "CE",26       // sign       [3]
  db "TASK",[5]    // task name  [9]
  dw 1             // stack size [w]
  dw 2             // task size  [w]

#org 0
  #include source\shell\funcs.csm

  // Allocate console
  ah=3;int 0x24;push eax

  // Show copyright
  push cs;pop ds;ah=0xC;esi=cpr;int 0x23

  // Allocate memory
  ax=0;ebx=5;int 0x20;ds=ax;es=ax

 #shortdef curr_DIR   0
 #shortdef buffer     8

  d:curr_DIR=0

  {
    push ds;push cs;pop ds;ah=0xC;esi=shl;int 0x23;pop ds

    edi=buffer
    Readln()
    ax=0x50A;int 0x23

    if (d:[buffer]=='exit'&&b:[buffer.4]==0){
      jmp ?v1
    }

    // Get reg
    xor ebx,ebx
    if(w:[buffer]!='/'){
      ah=0x42;edi=buffer;int 0x20
      if(~c||ebx==0xFFFFFFFF){
        push ds;push cs;pop ds;ah=0xC;esi=nfn;int 0x23;pop ds
        esi=buffer;ah=0xC;int 0x23;ax=0x50A;int 0x23
        jmp ?^2
      }
    }

    // Rescan + show
    ax=0x4502;int 0x20;ebx=edx
    while(~nc&&ebx!=0xFFFFFFFF){
       push ebx;ah=0x46;edi=buffer;int 0x20;ah=0xC;esi=buffer;int 0x23
       ax=0x50A;int 0x23;pop ebx;push ebx

       // Show key info (if present)
       b:[buffer]=0;edi=buffer;ah=0x43;int 0x20;
       if (b:[buffer]!=0){ push ds;push cs;pop ds;ah=0xC;esi=dat
       int 0x23;pop ds;ah=0xC;esi=buffer;int 0x23;ax=0x50A;int 0x23}

       pop ebx;ax=0x4501;int 0x20;ebx=eax
    }

    jmp ?^0
  }

  // Free console
  pop ebx;ah=4;int 0x24

  ah=0x21;int 0x20

cpr: db "Registers editor v0.99/alpha",10,0
shl: db ":>",0
nfn: db "not found: ",0
dat: db " data: ",0
