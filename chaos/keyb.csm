 // System device driver
#code 32
#output bin\keyb.bin

  db "CHAOS",26    // sign [6]
  db "KEYB",[4]    // Driver name [8]
  dw 0x1           // Size in pages [2]

// Driver exit code
#shortdef drv_ld_ok 0
#shortdef drv_ld_error 1
#shortdef drv_ld_irq_abs 2
#shortdef drv_ld_int_abs 3
#shortdef drv_ld_dev_abs 4
#shortdef drv_ld_port_confl 5

// Local defines
#shortdef buf_mem_size 4
#shortdef tail 0
#shortdef head 4

// defines
#shortdef buf_size buf_mem_size*4096 - 10

#org 0

  // Show device name
  push cs;pop ds;esi=cpr;ah=0x31;int 0x21

  // Allocate buffer
  ah=6;ebx=buf_mem_size;int 0x20;push eax
  bx=ax;edi=sel;ah=3;int 0x22
  pop eax;ds=ax

  // tail & head = 8
  d:tail=8;d:head=8

  // Allocate interrupts
  ax=0x124;edx=int24;int 0x22
  ax=0x201;edx=irq1;int 0x22

  iret

int24:
  push ds;push esi;push edi
  ax=w:cs:sel;ds=ax;xor eax,eax
  edi=d:head;esi=d:tail
  ifelse (edi!=esi){
    al=b:[edi]
    inc edi;if (edi==buf_size){ edi=8 }
    d:head=edi
  } else { dec eax }
  pop edi;pop esi;pop ds
  iret

irq1:
  push eax;push ds;push esi
  ax=w:cs:sel;ds=ax
  in al,0x60

  // Save & increment tail
  esi=d:tail;b:[esi]=al
  inc esi;if (esi==buf_size){ esi=8 }
  d:tail=esi

  pop esi;pop ds
  mov al,0x20
  out 0x20,al
  pop eax
  iret

cpr: db "KEYBR: Keyboard standard 101/102-key",13,10,0
sel: dd 0
