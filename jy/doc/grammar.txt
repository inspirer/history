
			JY Linker. Грамматика, лексика.
        --------------------------------------------

 Ключевые слова: 

	1) code, org, section, if, else, align
    2) регистры (eax,ax,al, ..... )
    3) префиксы (rep,lock, ....)
    4) db, dw, dd, dq, dt

 Лексические единицы:

	Lid  - идентификатор
    	последовательность из AlphaNumeric, подчеркивания, точки и '@'
        т.е. [A-Za-z0-9_@.]

	Licon - целое положительное число 0..(2^32-1)
		бывает в виде:
        	 0x...    шестнадцатиричное
             0....    восьмеричное
             123      обычное

	Lccon, Lscon
    	обычные, из escape последовательностей поддерживается только 
        	a,b,f,n,r,t,v,\,',",?

    Lfcon - пока не реализованы

 Комментарии:

 	'~' в memory-reference означает что смещение использует 8 бит вместо 32
    идентификаторы начинающиеся с '_' или '.' автоматически попадают в глобальное пространство имен

 Грамматика:

translation-unit:
	statement-seq

statement-seq:
	statement
	statement-seq statement

statement:
	opcode-ia32
	Lalign constant-expression
	Lorg constant-expression
	Lcode Licon
	Lsection Lid new-orgopt ';'
	compound-seq
	data-definition
	label-statement

new-org:
	Lorg constant-expression

compound-seq:
	Lsection Lid '{' statement-seqopt '}'
	'{' statement-seq '}'
	Lif '(' constant-expression ')' '{' statement-seq '}'
	Lif '(' constant-expression ')' '{' statement-seq '}' Lelse '{' statement-seq '}'

label-statement:
	Lid ':'
	calculation-timeopt Lid '=' constant-expression

calculation-time:
	'[' Licon ']'

opcode-ia32:
	Lprefixopt Lid opcode-param-seqopt terminator

terminator:
	Lnewline
	';'

opcode-param-seq:
	opcode-param
	opcode-param-seq ',' opcode-param

opcode-param:
	register-operand
	immediate-operand
	memory-reference

register-operand:
	Lseg
	Lreg

immediate-operand:
	constant-expression

memory-reference:
	'~'opt memory-modifier-seq mem-address mem-address-seqopt
	'~'opt memory-modifier-seqopt mem-address-seq

mem-address-seq:
	'[' mem-address ']'
	mem-address-seq '[' mem-address ']'

memory-modifier-seq:
	memory-modifier
	memory-modifier-seq memory-modifier

memory-modifier:
	Lid ':'
	Lseg ':'

mem-address:
	mem-address-element
	mem-address-element-with-sign
	mem-address mem-address-element-with-sign

mem-address-element:
	Lreg
	Licon '*' Lreg
	simple-expression

mem-address-element-with-sign:
	'-' simple-expression
	'+' mem-address-element

data-definition:
	Lidopt data-keyword data-list

data-keyword:
	Ldata

data-list:
	data-element
	data-list ',' data-element

data-element:
	Lfcon
	Lscon
	constant-expression
	'[' constant-expression data-fillopt ']'

data-fill:
	':' Licon

constant-expression:
	conditional-expression

simple-expression:
	Lccon
	Licon
	Lid
	'(' constant-expression ')'
	'$'
	'#'
	Lsection '(' Lid ')'

unary-expression:
	simple-expression
	'-' unary-expression
	'!' unary-expression
	'~' unary-expression

multiplicative-expression:
	unary-expression
	multiplicative-expression '*' unary-expression
	multiplicative-expression '/' unary-expression
	multiplicative-expression '%' unary-expression

additive-expression:
	multiplicative-expression
	additive-expression '+' multiplicative-expression
	additive-expression '-' multiplicative-expression

shift-expression:
	additive-expression
	shift-expression Lshl additive-expression
	shift-expression Lshr additive-expression

relational-expression:
	shift-expression
	relational-expression '<' shift-expression
	relational-expression '>' shift-expression
	relational-expression Lleq shift-expression
	relational-expression Lgeq shift-expression

equality-expression:
	relational-expression
	equality-expression Leq2 relational-expression
	equality-expression Lnoteq relational-expression

and-expression:
	equality-expression
	and-expression '&' equality-expression

exclusive-or-expression:
	and-expression
	exclusive-or-expression '^' and-expression

inclusive-or-expression:
	exclusive-or-expression
	inclusive-or-expression '|' exclusive-or-expression

logical-and-expression:
	inclusive-or-expression
	logical-and-expression Land2 inclusive-or-expression

logical-or-expression:
	logical-and-expression
	logical-or-expression Lor2 logical-and-expression

conditional-expression:
	logical-or-expression
	logical-or-expression '?' constant-expression ':' constant-expression
